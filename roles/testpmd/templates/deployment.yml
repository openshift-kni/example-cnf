kind: Deployment
apiVersion: apps/v1
metadata:
  name: "{{ ansible_operator_meta.name }}-app"
  namespace: "{{ ansible_operator_meta.namespace }}"
spec:
  replicas: {{ size | int }}
  selector:
    matchLabels:
      app: testpmd
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
{% for network in networks %}
{% set outer_loop = loop %}
{% for count in range(network.count) %}
          {
            "name": "{{ network.name }}",
{% if network.mac|default([])|length == network.count %}
            "mac": "{{ network.mac[loop.index - 1] }}",
{% endif %}
            "namespace": "{{ ansible_operator_meta.namespace }}"
          }{% if loop.index < network.count or outer_loop.index < network_name_list|length %},{% endif %}
{% endfor %}
{% endfor %}
        ]'
      labels:
        app: testpmd
    spec:
      nodeSelector:
        examplecnf.openshift.io/testpmd: ""
      containers:
      - name: testpmd
        command: ["testpmd-wrapper"]
        args:
        - "--socket-mem {{ socket_memory }}"
        - "-n {{ memory_channels }}"
        - "--proc-type auto"
        - "--file-prefix pg"
        - "--"
        - "--disable-rss"
        - "--nb-cores={{ forwarding_cores }}"
        - "--rxq={{ rx_queues }}"
        - "--txq={{ tx_queues }}"
        - "--rxd={{ rx_descriptors }}"
        - "--txd={{ tx_descriptors }}"
        - "--auto-start"
{% for mac in ethpeer_maclist %}
        - "--eth-peer={{ loop.index -1 }},{{ mac }}"
{% endfor %}
        - "--forward-mode={{ forward_mode }}"
        image: "{{ image }}"
        imagePullPolicy: "{{ image_pull_policy }}"
        securityContext:
{% if privileged %}
          privileged: true
{% else %}
          capabilities:
            add: ["IPC_LOCK", "NET_ADMIN"]
{% endif %}
        resources:
          limits:
            hugepages-1Gi: {{ hugepage_1gb_count }}
            memory: {{ memory }}
            cpu: {{ cpu }}
{% for key, value in network_resources.items() %}
            {{ key }}: {{ value }}
{% endfor %}
          requests:
            hugepages-1Gi: {{ hugepage_1gb_count }}
            memory: {{ memory }}
            cpu: {{ cpu }}
{% for key, value in network_resources.items() %}
            {{ key }}: {{ value }}
{% endfor %}
        volumeMounts:
        - name: hugepage
          mountPath: /dev/hugepages
        env:
        - name: NETWORK_NAME_LIST
          value: "{{ network_resources.keys()|list|join(',') }}"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
{% for key, value in environments.items() %}
        - name: {{ key }}
          value: "{{ value }}"
{% endfor %}
{% if mac_workaround_enable %}
      initContainers:
      - name: testpmd-mac-fix
        image: "{{ mac_workaround_image }}"
        imagePullPolicy: "{{ image_pull_policy }}"
        command:
        - "cp"
        - "-f"
        - "/sriov-{{ mac_workaround_version }}"
        - "/host/var/lib/cni/bin/{{ mac_workaround_file }}"
        securityContext:
          privileged: true
        resources:
          limits:
            memory: {{ memory }}
            cpu: {{ cpu }}
        volumeMounts:
        - name: host-cni-bin
          mountPath: /host/var/lib/cni/bin
{% endif %}
      volumes:
      - name: hugepage
        emptyDir:
          medium: HugePages
{% if mac_workaround_enable %}
      - name: host-cni-bin
        hostPath:
          path: /var/lib/cni/bin
{% endif %}
