apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: testpmd-lb-operator
    app.kubernetes.io/part-of: testpmd-lb-operator
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: testpmd-lb-operator
    app.kubernetes.io/part-of: testpmd-lb-operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 2
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/created-by
                operator: In
                values:
                - testpmd-lb-operator
            topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
      containers:
      - args:
        - --leader-elect
        - --leader-election-id=testpmd-lb-operator
        image: controller:latest
        name: manager
        ports:
        - name: "tcp-lb-int-one"
          containerPort: 5050
        - name: "http-probe"
          containerPort: 6789
        - name: "http-metric"
          containerPort: 8080
        - name: "tcp-lb-int-two"
          containerPort: 8888
        env:
        - name: ANSIBLE_GATHERING
          value: explicit
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
          runAsNonRoot: true
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo Hello from the postStart handler"]
          preStop:
            exec:
              command: ["/bin/sh", "-c", "echo Hello from the preStop handler"]
        livenessProbe:
          httpGet:
            path: /healthz
            port: 6789
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 6789
          initialDelaySeconds: 5
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /healthz
            port: 6789
          initialDelaySeconds: 5
          periodSeconds: 10
        terminationMessagePolicy: FallbackToLogsOnError
        resources:
          limits:
            cpu: 1
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
