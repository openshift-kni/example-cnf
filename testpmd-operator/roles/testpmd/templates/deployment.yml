kind: Deployment
apiVersion: apps/v1
metadata:
  name: "{{ ansible_operator_meta.name }}-app"
  namespace: "{{ ansible_operator_meta.namespace }}"
spec:
  replicas: {{ size | int }}
  selector:
    matchLabels:
      example-cnf-type: cnf-app
  template:
    metadata:
{% if not skip_annot|bool %}
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
{% for network in networks %}
{% set outer_loop = loop %}
{% for count in range(network.count) %}
          {
            "name": "{{ network.name }}",
{% if network.mac|default([])|length == network.count %}
            "mac": "{{ network.mac[loop.index - 1] }}",
{% endif %}
            "namespace": "{{ ansible_operator_meta.namespace }}"
          }{% if loop.index < network.count or outer_loop.index < network_name_list|length %},{% endif %}
{% endfor %}
{% endfor %}
        ]'
{% endif %}
      labels:
        example-cnf-type: cnf-app
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: example-cnf-type
                operator: In
                values:
                - lb-app
            topologyKey: kubernetes.io/hostname
      serviceAccountName: testpmd-operator-controller-manager
      containers:
      - name: testpmd
        command:
        - /var/lib/testpmd/run
        image: "{{ image_testpmd }}"
        imagePullPolicy: "{{ image_pull_policy }}"
        securityContext:
{% if privileged %}
          privileged: true
{% else %}
          runAsUser: 0
          capabilities:
            add: ["IPC_LOCK", "NET_ADMIN"]
{% endif %}
        resources:
          limits:
            hugepages-1Gi: {{ hugepage_1gb_count }}
            memory: {{ memory }}
            cpu: {{ cpu }}
{% for key, value in network_resources.items() %}
            {{ key }}: {{ value }}
{% endfor %}
          requests:
            hugepages-1Gi: {{ hugepage_1gb_count }}
            memory: {{ memory }}
            cpu: {{ cpu }}
{% for key, value in network_resources.items() %}
            {{ key }}: {{ value }}
{% endfor %}
        volumeMounts:
        - name: hugepage
          mountPath: /dev/hugepages
        - name: log-dir
          mountPath: /var/log/testpmd
        - name: lib-dir
          mountPath: /var/lib/testpmd
        - name: cnf-run
          mountPath: /var/lib/testpmd/run
          subPath: run
        env:
        - name: NETWORK_NAME_LIST
          value: "{{ network_resources.keys()|list|join(',') }}"
        - name: TESTPMD_CPU_COUNT
          value: "{{ cpu }}"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CR_NAME
          value: "{{ ansible_operator_meta.name }}"
        - name: eth_peer
          value: "{{ eth_peer }}"
        - name: socket_mem
          value: "{{ socket_memory }}"
        - name: memory_channels
          value: "{{ memory_channels }}"
        - name: rx_queues
          value: "{{ rx_queues }}"
        - name: tx_queues
          value: "{{ tx_queues }}"
        - name: rx_descriptors
          value: "{{ rx_descriptors }}"
        - name: tx_descriptors
          value: "{{ tx_descriptors }}"
{% for key, value in environments.items() %}
        - name: {{ key }}
          value: "{{ value }}"
{% endfor %}
      volumes:
      - name: hugepage
        emptyDir:
          medium: HugePages
      - name: log-dir
        emptyDir: {}
      - name: lib-dir
        emptyDir: {}
      - name: cnf-run
        configMap:
          name: cnf-run
          defaultMode: 0755
