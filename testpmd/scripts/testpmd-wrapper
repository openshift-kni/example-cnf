#!/bin/bash

set -ex

RUN_APP=${run_app:=1}

LOG_DIR="/var/log/testpmd"
[ -d $LOG_DIR ] || mkdir -p $LOG_DIR
rm -rf /var/log/testpmd/*

MODE=${MODE:-"fwd"}

if [ -z NETWORK_NAME_LIST ]; then
    echo "NETWORK_NAME_LIST is empty, exiting.."
    exit 1
fi

PCI=""
IFS=',' read -r -a NETWORK_ARRAY <<< "$NETWORK_NAME_LIST"

TESTPMD_ENV="/var/lib/testpmd/env.txt"
echo "" > $TESTPMD_ENV
for item in "${NETWORK_ARRAY[@]}"; do
    IFS='/' read -r -a RES_ARRAY <<< "$item"
    NAME="PCIDEVICE_OPENSHIFT_IO_${RES_ARRAY[1]^^}"
    if [ -z ${!NAME} ]; then
        echo "Could not find ${NAME} with PCI address, exiting"
        exit 1
    fi
    echo "${NAME}=${!NAME}" >> $TESTPMD_ENV
    IFS=',' read -r -a PCI_ARRAY <<< "${!NAME}"
    for pci_item in "${PCI_ARRAY[@]}"; do
        PCI+=" -w ${pci_item} "
    done
done

LCORES=$(cat /sys/fs/cgroup/cpuset/cpuset.cpus)
if [ -z $LCORES ]; then
    echo "Could not find cores, existing.."
    exit 1
fi

CORES_STR=$(expand-cpus)
IFS=',' read -ra CORES_ARR <<< "$CORES_STR"
CORES_LEN=${#CORES_ARR[@]}
if [[ $CORES_LEN -gt $TESTPMD_CPU_COUNT ]]; then
    echo "ERROR: Acutal cores (${CORES_LEN}) is greater than configured cores (${TESTPMD_CPU_COUNT})"
    exit 1
fi

#CORES_SLICE="${CORES_ARR[@]:1}"
#CORES_SPACE="${CORES_SLICE[*]}"
#LCORES="${CORES_SPACE//${IFS:0:1}/,}"

STATS_PERIOD=${stats_period:=1}
RUN="/usr/local/bin/testpmd-run"
CMD="testpmd"
CMD="${CMD} -l $LCORES"
CMD="${CMD} $PCI"
CMD="${CMD} $@"
CMD="${CMD} --stats-period ${STATS_PERIOD}"
CMD="${CMD} --cmdline-file /root/testpmd-runtime-cmds.txt"

if [[ "$MODE" == "lb" ]]; then
    CNF_PCI=""
    IFS=',' read -r -a NETWORK_ARRAY <<< "$CNF_APP_NETWORK_NAME_LIST"
    for item in "${NETWORK_ARRAY[@]}"; do
        IFS='/' read -r -a RES_ARRAY <<< "$item"
        NAME="PCIDEVICE_OPENSHIFT_IO_${RES_ARRAY[1]^^}"
        if [ -z ${!NAME} ]; then
            echo "Could not find ${NAME} with PCI address, exiting"
            exit 1
        fi
        IFS=',' read -r -a PCI_ARRAY <<< "${!NAME}"
        for pci_item in "${PCI_ARRAY[@]}"; do
            CNF_PCI+=" --dut-pci ${pci_item} "
        done
    done
    ETH_PEER="${ETH_PEER_MACS}"
    CMD="${CMD} --enable-lb "
    CMD="${CMD} ${CNF_PCI} "
fi

CMD="${CMD} 2>&1 | tee /var/log/testpmd/app.log"
echo "${CMD}" > $RUN
chmod +x $RUN

function sig_term() {
    echo $(date +"%F %T,%3N") > /var/log/testpmd/sigterm-received.log
    # kill testpmd application
    kill -9 $(ps aux | grep -w stats-period | grep -v grep | awk '{print $2}')
    exit
}
trap sig_term SIGTERM

if [[ $RUN_APP == "1" ]]; then
    testpmd-run
else
    sleep infinity
fi
