#!/bin/bash

set -ex

RUN_APP=${run_app:=1}
SERVER=${TREX_SERVER_URL:="0.0.0.0"}
MODE=${MODE:="lb"}

if [[ "${MODE}" == "direct" ]]; then
  echo "MODE is ${MODE}"
  RUN_APP=3
fi

# wait for trex server to be ready
count=120
while [[ ${count} -gt 0 ]]; do
    nc -z ${SERVER} 4500 && break || sleep 2
    ((count--))
done
if [[ ${count} -gt 0 ]]; then
    echo "trex-server is ready"
else
    echo "ERROR: trex-server could not start properly, exiting... "
    exit 1
fi

if [ ! -z ${TREX_PROFILE_NAME} ]; then
    if [ -f "/opt/trexprofile/content" ]; then
        # ConfigMap created by nfv-example-cnf-deploy ansible scripts
        ln -s /opt/trexprofile/content "${HOME}/${TREX_PROFILE_NAME}"
    elif [ -f "/opt/trexprofile/${TREX_PROFILE_NAME}" ]; then
        # ConfigMap created by oc/kubectl cli
        ln -s "/opt/trexprofile/${TREX_PROFILE_NAME}" "${HOME}/${TREX_PROFILE_NAME}"
    elif [ -f "/opt/trex/trex-core/scripts/stl/${TREX_PROFILE_NAME}" ]; then
        # No ConfigMap, Use one of trex-core's profile
        ln -s "/opt/trex/trex-core/scripts/stl/${TREX_PROFILE_NAME}" "${HOME}/${TREX_PROFILE_NAME}"
    else
        echo "ERROR: TREX_PROFILE_NAME is defined but could not find valid profiles"
        exit 1
    fi
fi

if [[ $RUN_APP == "1" ]]; then
    # leave the server running for 10s before starting application
    sleep 10
    echo "Running TRex ..."
    run-trex
elif [[ $RUN_APP == "2" ]]; then
    sleep 10
    echo "Running binary search"
    run-binary-search
elif [[ $RUN_APP == "3" ]]; then
    sleep 10
    echo "Running TRex in direct mode (without LB)"
    run-trex-direct
else
    echo "Skipping TRex run, waiting ..."
    sleep infinity
fi
