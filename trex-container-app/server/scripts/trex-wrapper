#!/bin/bash

set -e

# Start lifecycle webserver in background
/usr/local/bin/webserver 8096 &

# Define the function to add timestamp to log entries
echo_ts() {
  echo "$(date -u +"%Y-%m-%dT%H:%M:%S%z") $@"
}

# environments
RUN_DEPLOYMENT=${run_deployment:=1}
RUN_DELAY=${run_delay:=1}

CORES=$(taskset -pc 1 | cut -d: -f2)

# Write TRex cfg file
/usr/local/bin/trex-cfg-configure $CORES

# Read the number of cores from the trex cfg
# It is required as input via -c arg (for binary_search scripts of trafficgen)
CORE_COUNT_CFG=$(grep ' c: ' /usr/local/bin/example-cnf/trex_cfg.yaml | cut -d: -f2 | xargs)
CORE_COUNT=${trex_core_count:=$CORE_COUNT_CFG}
# TREX_CPU env will be set on the pod spec with number of required cores
if [[ $((CORE_COUNT_CFG + 2)) != $TREX_CPU ]]; then
    # TEMP
    echo_ts "CORES=$((CORE_COUNT + 2))"
    echo_ts "TREX_CPU=$TREX_CPU"
    exit 1
fi

RUN="/usr/local/bin/example-cnf/trex-server-run"
CMD="/usr/local/bin/trex-server"
CMD="${CMD} $CORE_COUNT"
echo "${CMD}" > $RUN
chmod +x $RUN

if [[ $RUN_DEPLOYMENT == "1" ]]; then
    sleep $RUN_DELAY
    #echo_ts "Starting TRex daemon server ..."
    #./trex_daemon_server start
    echo_ts "Starting TRex server ..."
    sudo -E /usr/local/bin/example-cnf/trex-server-run
else
    echo_ts "Skipping TRex server start, waiting ..."
    sleep infinity
fi
