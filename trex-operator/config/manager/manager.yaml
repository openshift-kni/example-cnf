apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: example-cnf
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: trex-operator
    app.kubernetes.io/part-of: trex-operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        example-cnf-type: trex-operator
    spec:
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        seccompProfile:
          type: RuntimeDefault
      containers:
      - args:
        - --leader-elect
        - --leader-election-id=trex-operator
        image: controller:latest
        imagePullPolicy: IfNotPresent
        name: manager
        env:
          - name: ANSIBLE_GATHERING
            value: explicit
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo Hello from the postStart handler"]
          preStop:
            exec:
              command: ["/bin/sh", "-c", "echo Hello from the preStop handler"]
        livenessProbe:
          httpGet:
            path: /healthz
            port: 6789
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 6789
          initialDelaySeconds: 5
          periodSeconds: 10
        # operator-sdk is not implementing startup probe up to now, using liveness probe endpoint
        # while this feature is developed
        startupProbe:
          httpGet:
            path: /healthz
            port: 6789
          initialDelaySeconds: 5
            periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 768Mi
          requests:
            cpu: 10m
            memory: 256Mi
        terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
