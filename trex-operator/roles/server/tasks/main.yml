---
- name: Set default newtork facts
  set_fact:
    network_resources: {}
    network_name_list: []

- name: Check if networks parameter is empty
  fail:
    msg: "networks parameter is empty"
  when: networks|length == 0

- include_tasks: network-parse.yaml
  loop: "{{ networks }}"
  loop_control:
    loop_var: network_item

- name: Create ServiceAccount for TRex resource
  k8s:
    state: present
    definition: "{{ lookup('template', 'service_account.yml') }}"

- name: Create Role for TRex resource
  k8s:
    state: present
    definition: "{{ lookup('template', 'role.yml') }}"

- name: Create RoleBinding for TRex resource
  k8s:
    state: present
    definition: "{{ lookup('template', 'role_binding.yml') }}"

- name: Create TRex deployment
  k8s:
    state: present
    definition: "{{ lookup('template', 'deployment.yml') }}"

# if replica = 1, recommended not to set maxUnavailable to 0 or 0% and minAvailable to 100% for upgrades
# https://github.com/operator-framework/operator-lifecycle-manager/blob/master/doc/design/adding-pod-disruption-budgets.md#limitations-on-pod-disruption-budgets
# TODO (in a new patch): update PDB during upgrades to avoid issues during node draining, something like:
# https://medium.com/@tamber/solution-avoid-kubernetes-openshift-node-drain-failure-due-to-active-poddisruptionbudget-df68efed2c4f
- name: Create PodDisruptionBudget for TRex pod
  k8s:
    state: present
    definition: "{{ lookup('template', 'pdb.yml') }}"

- name: Create TRex Server Service
  when: trex_server|default(true)|bool
  k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: trex-server
        namespace: "{{ ansible_operator_meta.namespace }}"
      spec:
        ipFamilyPolicy: "PreferDualStack"
        selector:
          example-cnf-type: pkt-gen
        ports:
          - port: 4500
            protocol: TCP
            targetPort: 4500
            name: async
          - port: 4501
            protocol: TCP
            targetPort: 4501
            name: sync
