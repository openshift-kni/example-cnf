---
- name: get the list of incomplete jobs
  kubernetes.core.k8s_info:
    kind: Job
    api_version: batch/v1
    label_selectors:
      - example-cnf-type=pkt-gen-app
    field_selectors:
      - status.successful!=1
  register: jobs_running

- name: set default active job fact
  ansible.builtin.set_fact:
    active_jobs: 0

- name: find active jobs
  ansible.builtin.set_fact:
    active_jobs: "{{ active_jobs + 1 }}"
  loop: "{{ jobs_running.resources }}"
  when:
    - "'failed' not in item.status or item.status.failed != 1"

- name: trexapp job creation
  when: "active_jobs|int == 0"  
  block:

    - name: initialize trex_ip_list var
      ansible.builtin.set_fact:
        trex_ip_list: ""

    - name: construct trex_ip_list
      ansible.builtin.set_fact:
        trex_ip_list: "{{ trex_ip_list }}{{ item }},"
      loop: "{{ trex_ips }}"

    - name: print trex_ip_list
      ansible.builtin.debug:
        var: trex_ip_list

    - name: initialize cnfapp_ip_list var
      ansible.builtin.set_fact:
        cnfapp_ip_list: ""

    - name: construct cnfapp_ip_list
      ansible.builtin.set_fact:
        cnfapp_ip_list: "{{ cnfapp_ip_list }}{{ item }},"
      loop: "{{ cnfapp_ips }}"

    - name: print cnfapp_ip_list
      ansible.builtin.debug:
        var: cnfapp_ip_list

    - name: Create ServiceAccount for trexapp job resource
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'service_account.yml') }}"

    - name: Create Role for trexapp job resource
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'role.yml') }}"

    - name: Create RoleBinding for trexapp job resource
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'role_binding.yml') }}"

    - name: create trexapp job
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', 'job.yml') }}"
